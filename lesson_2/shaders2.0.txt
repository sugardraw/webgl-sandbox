//::::::::::::::: WEBGL 2.0 VERTEX SHADER ::::::::::

#version 300 es

in vec3 a_position;
uniform mediump float uPointSize;
uniform float uAngle;
out vec3 size;

void main(void){

    gl_PointSize = uPointSize;
    size = uPointsize;

    gl_Position = vec4(
        cos(uAngle)*0.8 + a_position.x,
        sin(uAngle)*0.8 + a_position.y,
        a_position.z, 1.0);
    )
}

//::::::::::::::: WEBGL 2.0 FRAGMENT SHADER ::::::::::

#version 300 es


precision mediump float;

uniform float uPointSize;
in vec3 size;
out vec4 finalColor;

void main(void){
    float c = (40.0 - uPointSize)/20.0;
    finalColor =vec4(c,c,c,1.0);
}
